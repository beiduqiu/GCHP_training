#!/bin/bash
#BSUB -oo LSTM_AddhiddenLayer_%J.out 
#BSUB -q gpu-compute
#BSUB -gpu "num=1:mode=exclusive_process"
#BSUB -u w.zifan1@wustl.edu
#BSUB -J PythonGPUJob
#BSUB -R 'rusage[mem=40GB]' 
#BSUB -M 40GB

# ======= Step 1: Install Miniconda if not already installed =======
if [ ! -d "$HOME/miniconda" ]; then
    echo "Installing Miniconda..."
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    bash ~/miniconda.sh -b -p ~/miniconda
    rm ~/miniconda.sh
fi

# ======= Step 2: Setup Conda =======
export PATH=$HOME/miniconda/bin:$PATH
source ~/miniconda/etc/profile.d/conda.sh

# ======= Step 3: Create Conda environment if it doesnâ€™t exist =======
ENV_NAME=my_ml_env
if ! conda info --envs | grep -q "$ENV_NAME"; then
    echo "Creating Conda environment: $ENV_NAME"
    conda create -y -n $ENV_NAME python=3.9 pip
fi

# Activate Conda environment
conda activate $ENV_NAME
echo "Checking PyTorch and CUDA compatibility..."

# ======= Step 4: Install Required Python Packages =======
pip install --upgrade pip
pip install netCDF4 pandas numpy xarray tqdm psutil

# ======= Step 5: Install CUDA 11.8-compatible PyTorch =======
# pip uninstall -y torch torchvision torchaudio
# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# ======= Step 6: Install NVIDIA CUDA Libraries =======
# pip install --no-cache-dir nvidia-pyindex
# pip install --no-cache-dir nvidia-cuda-runtime-cu11
# pip install --no-cache-dir nvidia-cuda-nvrtc-cu11
# pip install --no-cache-dir nvidia-cudnn-cu11
# pip install xarray
# pip install pandas
# pip install numpy
# pip install xarray
# pip install tqdm
# pip install collections
# pip install netCDF4 h5netcdf
pip install h5netcdf
python3 -V
# ======= Step 7: Check PyTorch and CUDA Compatibility =======
echo "Checking PyTorch and CUDA compatibility..."
python -c "import torch; print('Torch Version:', torch.__version__); print('CUDA Available:', torch.cuda.is_available()); print('CUDA Version:', torch.version.cuda); print('GPU:', torch.cuda.get_device_name(0) if torch.cuda.is_available() else 'No GPU')"

# ======= Step 8: Run Training Script =======
sh model_training.sh
